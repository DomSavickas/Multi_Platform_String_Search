@page "/resources"
@using Syncfusion.Blazor.CircularGauge
@using System.Net;

<h1>Resources</h1>
<p style="height:25px"></p>

<div class="flex-parent-element">
    <div class="flex-child-element"><SemiCircularGauge Label=@CPUtype GaugeStartAngle=270 GaugeEndAngle=90 PointerValue="@CPUusage" GaugeRadius="100%" GaugeCenterX="50%" GaugeCenterY="50%" GaugeMoveToCenter=false HideLabelCheck=true TextAngle="353" TextRadius="138%" /></div>
    <div class="flex-child-element"><SemiCircularGauge Label=@RAMtype GaugeStartAngle=270 GaugeEndAngle=90 PointerValue="@RAMusage" GaugeRadius="100%" GaugeCenterX="50%" GaugeCenterY="50%" GaugeMoveToCenter=false HideLabelCheck=true TextAngle="360" TextRadius="150%" /></div>
    @foreach (var item in items)
    {
        string N = item.Dname;
        double S = item.Dsize;
        <div class="flex-child-element" style="margin-top:-23px"><BarChart Label ="@N" InvertedTrianglePointerValue="@S"></BarChart></div>
    }
</div>

<style type="text/css">
     .flex-parent-element {
        display: flex;
        width: 50%;
     }

     .flex-child-element {
        flex: 1;
        margin: 10px;
     }

    .flex-child:first-child {
        margin-right: 20px;
    }
</style>
@code {
    private string currentDevice;
    private double CPUusage;
    private string CPUtype;
    private string RAMtype;
    private string DISKtype = "Disk1";
    private double RAMusage;
    private string gHeight = "250px";
    private string gWidth = "250px";
    private string TempString = "";
    private string DISKname = "";
    private double DISKsize;
    private string DISKfSpace = "";
    private string DISKspace = "";

    public class Div
    {
        public string Dname { get; set; }
        public double Dsize { get; set; }
    }

    private List<Div> items = new List<Div>();

    [Inject]
    private CpuInfoService CpuInfoService { get; set; }

    protected override void OnInitialized()
    {
        items.Clear();
        CPUtype = CpuInfoService.CPUinfo();
        CPUusage = Convert.ToDouble(CpuInfoService.CPUusage());
        RAMtype = string.Join('/' , CpuInfoService.RAMtype());
        RAMusage = Convert.ToDouble(CpuInfoService.RAMusage());
        foreach (var Disk in CpuInfoService.DISKtype())
        {
            DISKname = "Test";
            DISKsize = Convert.ToDouble(Disk.Size);
            DISKfSpace = Disk.FreeSpace;
            DISKspace = Math.Round((Convert.ToDouble(DISKfSpace) / Convert.ToDouble(DISKsize) * 100), 0).ToString();
            items.Add(new Div { Dname = DISKname.ToString(), Dsize = Convert.ToDouble(DISKspace) });
            StateHasChanged();
        }
        PrintIdiom();
    }

    public class DivData
    {
        public string InnerHtml { get; set; }
    }

    private void PrintIdiom()
    {
        if (DeviceInfo.Current.Idiom == DeviceIdiom.Desktop)
            currentDevice = "The current device is a desktop";
        else if (DeviceInfo.Current.Idiom == DeviceIdiom.Phone)
            currentDevice = "The current device is a phone";
        else if (DeviceInfo.Current.Idiom == DeviceIdiom.Tablet)
            currentDevice = "The current device is a tablet";
    }
}
